Review Exercise 1 45 mins (until 2:50 Ireland Time)
=================
Imagine some critical events that may happen, and which more than one subsystem needs to respond to
For example:
  Temperature changes (with min/max)
  Data-throughput changes (notify if near limits)
  Asset availability (with a time-limit on access)
  Automation events (starting, stopping, taking readings, writing logs)
  Test runners

Implement an observable subject which carries out some relevant logic over a period of time
Then implement more than one subscriber which will observe the subject and be notified of events

Exercise the code by making relevant logical changes to the observable subject
Show that the observers respond to these changes
Handle edge-cases and exceptions

E.g. subscribers monitor values 0 or more than 2, exceeds 7, less than 0 etc.

If time
-------
Either ask the user how many subscribers or randomly add and remove subscribers as time passes

Optional
--------
Also use other design patterns, such as factory and command to make your code more robust and abstract
Also, consider using modular architecture